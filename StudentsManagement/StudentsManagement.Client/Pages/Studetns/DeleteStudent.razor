@page "/delete-student/{id:int}"

@using Microsoft.AspNetCore.Authorization
@using StudentsManagement.Client.Services
@using StudentsManagement.Shared.Models
@rendermode InteractiveAuto
@inject NavigationManager NavigationManager
@inject IStudentRepository studentService


<h3>Delete Student</h3>
<hr />


    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label>First Name</label>
                <input type="text" class="form-control" value="@studobj.FirstName" disabled />
            </div>

            <div class="form-group">
                <label>Last Name</label>
                <input type="text" class="form-control" value="@studobj.LastName" disabled />
            </div>

            <div class="form-group">
                <label>Phone Number</label>
                <input type="text" class="form-control" value="@studobj.PhoneNumber" disabled />
            </div>


            <div class="form-group">
                <label>Email</label>
                <input type="text" class="form-control" value="@studobj.EmailAddress" disabled />
            </div>

            <div class="form-group">
                <label>Address</label>
                <input type="text" class="form-control" value="@studobj.Address" disabled />
            </div>

            

            <div class="form-group">
                <label>Country</label>
                <input type="text" class="form-control" value="@studobj.Country" disabled />
            </div>

        </div>


    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <button class="btn btn-danger" @onclick="DeleteStudentAsync">Delete</button>
                <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
            </div>
        </div>
    </div>

</div>



@code {

        public Student studobj { get; set; } = new Student();

        [Parameter]
        public int id { get; set; }


        protected override async Task OnInitializedAsync()
        {
            studobj = await studentService.GetStudentByIdAsync(id);
        }

        protected async Task<bool> DeleteStudentAsync()
        {
            await studentService.DeleteStudentAsync(id);
            NavigationManager.NavigateTo("/studentlist");
            return true;
        }

        protected void Cancel()
        {
            NavigationManager.NavigateTo("/studentlist");
        }

    


}
