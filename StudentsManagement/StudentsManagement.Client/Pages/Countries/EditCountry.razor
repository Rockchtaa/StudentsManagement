@page "/edit-country/{id:int}"

@using Microsoft.AspNetCore.Authorization
@using StudentManagamentShared.Models
@using StudentsManagement.Client.Services
@using StudentsManagement.Shared.Models
@rendermode InteractiveAuto
@inject NavigationManager NavigationManager
@inject ICountryRepository CountryService


<h3>Update New Student</h3>

<hr />
<div class="row">
    <div class="col-md-12">
        <EditForm Model="@Countryobj" OnValidSubmit="@UpdateCountry" FormName="UpdateStudentForm">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="col-md-6">
                <div class="row">
                    <div class="form-group row">
                        <label for="Name" class="form-control">Name</label>
                        <InputText for="Name" class="form-control col-sm-10" @bind-Value="@Countryobj.Name" />
                        <ValidationMessage for="() => Countryobj.Name" />
                    </div>
                </div>
                <div class="row"> 
                    <div class="form-group row">
                        <label for="Code" class="form-control">Code</label>
                        <InputText for="Code" class="form-control col-sm-10" @bind-Value="@Countryobj.Code" />
                        <ValidationMessage for="() => Countryobj.Code" />
                    </div>
                </div>
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary" onclick="() => CreateCountry()">Save Country</button>
            </div>
            <div class="form-group mt-4">
                <button type="submit" onclick="() => Cancel()" class="btn btn-primary">cancel</button>
            </div>

        </EditForm>


    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public Country Countryobj { get; set; } = new Country();

    [Parameter]
    public int id { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Countryobj = await CountryService.GetCountryByIdAsync(id);
    }

    protected async Task UpdateCountry()
    {
        var result = await CountryService.UpdateCountryAsync(Countryobj);

        NavigationManager.NavigateTo("/countrylist");

    }

    protected void Cancel()
    {
        NavigationManager.NavigateTo("/countrylist");
    }

}



